# Generated by Django 4.2.24 on 2025-09-05 11:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('first_name', models.CharField(max_length=100, verbose_name='First name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile')),
                ('contact_type', models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('employee', 'Employee'), ('other', 'Other')], max_length=20, verbose_name='Contact type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Company name')),
                ('legal_name', models.CharField(blank=True, max_length=200, verbose_name='Legal name')),
                ('company_type', models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('partner', 'Partner'), ('competitor', 'Competitor'), ('other', 'Other')], max_length=20, verbose_name='Company type')),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Tax ID')),
                ('registration_number', models.CharField(blank=True, max_length=50, verbose_name='Registration number')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=20, verbose_name='Fax')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('login', 'Login'), ('logout', 'Logout')], max_length=20, verbose_name='Action')),
                ('model_name', models.CharField(max_length=100, verbose_name='Model name')),
                ('object_id', models.CharField(blank=True, max_length=100, verbose_name='Object ID')),
                ('object_repr', models.CharField(blank=True, max_length=200, verbose_name='Object representation')),
                ('changes', models.JSONField(blank=True, default=dict, verbose_name='Changes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User agent')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping'), ('office', 'Office'), ('warehouse', 'Warehouse'), ('other', 'Other')], max_length=20, verbose_name='Address type')),
                ('street_address', models.CharField(max_length=255, verbose_name='Street address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal code')),
                ('country', models.CharField(default='Iran', max_length=100, verbose_name='Country')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is primary')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='core.company', verbose_name='Company')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='core.contact', verbose_name='Contact')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['-is_primary', 'city', 'street_address'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Key')),
                ('value', models.TextField(verbose_name='Value')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'ordering': ['key'],
                'indexes': [models.Index(fields=['key'], name='core_system_key_bbe506_idx'), models.Index(fields=['is_active'], name='core_system_is_acti_609d3b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['email'], name='core_contac_email_800caf_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['contact_type'], name='core_contac_contact_340f61_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['is_active'], name='core_contac_is_acti_ba050b_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='core_compan_name_f8e523_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['company_type'], name='core_compan_company_7ec0a1_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['is_active'], name='core_compan_is_acti_f26725_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user'], name='core_auditl_user_id_2ff9b7_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['action'], name='core_auditl_action_d9fb24_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['model_name'], name='core_auditl_model_n_36490f_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['created_at'], name='core_auditl_created_dc23ea_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['contact'], name='core_addres_contact_23ce67_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['company'], name='core_addres_company_906610_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['address_type'], name='core_addres_address_d051a3_idx'),
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['is_primary'], name='core_addres_is_prim_e4d52e_idx'),
        ),
    ]
