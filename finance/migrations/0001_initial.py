# Generated by Django 4.2.24 on 2025-09-05 11:07

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Account code')),
                ('account_type', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense')], max_length=20, verbose_name='Account type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='finance.account', verbose_name='Parent account')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True, verbose_name='Invoice number')),
                ('invoice_type', models.CharField(choices=[('sale', 'Sale'), ('service', 'Service'), ('credit', 'Credit Note'), ('debit', 'Debit Note')], default='sale', max_length=20, verbose_name='Invoice type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('invoice_date', models.DateField(verbose_name='Invoice date')),
                ('due_date', models.DateField(verbose_name='Due date')),
                ('sent_date', models.DateTimeField(blank=True, null=True, verbose_name='Sent date')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Paid date')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Tax amount')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Discount amount')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Total amount')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tax rate')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('terms_and_conditions', models.TextField(blank=True, verbose_name='Terms and conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='core.contact', verbose_name='Customer')),
                ('customer_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='core.company', verbose_name='Customer company')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-invoice_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_number', models.CharField(max_length=50, unique=True, verbose_name='Expense number')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('category', models.CharField(choices=[('office', 'Office Supplies'), ('travel', 'Travel'), ('utilities', 'Utilities'), ('marketing', 'Marketing'), ('maintenance', 'Maintenance'), ('other', 'Other')], max_length=20, verbose_name='Category')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Amount')),
                ('expense_date', models.DateField(verbose_name='Expense date')),
                ('receipt_number', models.CharField(blank=True, max_length=100, verbose_name='Receipt number')),
                ('receipt_image', models.ImageField(blank=True, null=True, upload_to='receipts/', verbose_name='Receipt image')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is approved')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='finance.account', verbose_name='Account')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_expenses', to=settings.AUTH_USER_MODEL, verbose_name='Approved by')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_expenses', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses', to='core.contact', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
                'ordering': ['-expense_date'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_number', models.CharField(max_length=50, unique=True, verbose_name='Transaction number')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('transaction_date', models.DateField(verbose_name='Transaction date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Amount')),
                ('reference_type', models.CharField(blank=True, max_length=50, verbose_name='Reference type')),
                ('reference_id', models.CharField(blank=True, max_length=50, verbose_name='Reference ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('credit_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_transactions', to='finance.account', verbose_name='Credit account')),
                ('debit_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='debit_transactions', to='finance.account', verbose_name='Debit account')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date', '-created_at'],
                'indexes': [models.Index(fields=['transaction_number'], name='finance_tra_transac_137c49_idx'), models.Index(fields=['transaction_date'], name='finance_tra_transac_0cc58e_idx'), models.Index(fields=['debit_account'], name='finance_tra_debit_a_3a439f_idx'), models.Index(fields=['credit_account'], name='finance_tra_credit__6ac4fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_number', models.CharField(max_length=50, unique=True, verbose_name='Payment number')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('online', 'Online Payment'), ('other', 'Other')], max_length=20, verbose_name='Payment method')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('payment_date', models.DateTimeField(verbose_name='Payment date')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='Reference number')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('bank_name', models.CharField(blank=True, max_length=100, verbose_name='Bank name')),
                ('account_number', models.CharField(blank=True, max_length=50, verbose_name='Account number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payments', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='finance.invoice', verbose_name='Invoice')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
                'indexes': [models.Index(fields=['payment_number'], name='finance_pay_payment_bb9d71_idx'), models.Index(fields=['invoice'], name='finance_pay_invoice_122c17_idx'), models.Index(fields=['status'], name='finance_pay_status_cb601d_idx'), models.Index(fields=['payment_date'], name='finance_pay_payment_72f761_idx')],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Unit price')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Discount percentage')),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Line total')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.invoice', verbose_name='Invoice')),
            ],
            options={
                'verbose_name': 'Invoice Item',
                'verbose_name_plural': 'Invoice Items',
                'ordering': ['id'],
                'indexes': [models.Index(fields=['invoice'], name='finance_inv_invoice_bdf530_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='finance_inv_invoice_89da8a_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['customer'], name='finance_inv_custome_8c51bd_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['status'], name='finance_inv_status_d9b47e_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='finance_inv_invoice_6c3844_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='finance_inv_due_dat_b93853_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['expense_number'], name='finance_exp_expense_d6be0d_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['category'], name='finance_exp_categor_54fa26_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['expense_date'], name='finance_exp_expense_a60cc7_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['is_approved'], name='finance_exp_is_appr_39ec94_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['code'], name='finance_acc_code_75c62f_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['account_type'], name='finance_acc_account_3b66f3_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['is_active'], name='finance_acc_is_acti_4329a8_idx'),
        ),
    ]
