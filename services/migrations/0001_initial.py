# Generated by Django 4.2.24 on 2025-09-05 11:07

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Start time')),
                ('end_time', models.DateTimeField(verbose_name='End time')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Is confirmed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ServiceNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Note')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Is internal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Service Note',
                'verbose_name_plural': 'Service Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name': 'Service Rating',
                'verbose_name_plural': 'Service Ratings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(max_length=50, unique=True, verbose_name='Request number')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='pending', max_length=20, verbose_name='Status')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Assigned at')),
                ('requested_date', models.DateTimeField(blank=True, null=True, verbose_name='Requested date')),
                ('scheduled_date', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled date')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed at')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Estimated cost')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Actual cost')),
                ('service_address', models.TextField(blank=True, verbose_name='Service address')),
                ('service_city', models.CharField(blank=True, max_length=100, verbose_name='Service city')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Base price')),
                ('estimated_duration', models.DurationField(verbose_name='Estimated duration')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Service Type',
                'verbose_name_plural': 'Service Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=50, unique=True, verbose_name='Employee ID')),
                ('skill_level', models.CharField(choices=[('junior', 'Junior'), ('intermediate', 'Intermediate'), ('senior', 'Senior'), ('expert', 'Expert')], max_length=20, verbose_name='Skill level')),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Hourly rate')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is available')),
                ('max_daily_hours', models.PositiveIntegerField(default=8, verbose_name='Max daily hours')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('specializations', models.ManyToManyField(related_name='technicians', to='services.servicetype', verbose_name='Specializations')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technician_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Technician',
                'verbose_name_plural': 'Technicians',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['name'], name='services_se_name_0209bb_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['is_active'], name='services_se_is_acti_4815d2_idx'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL, verbose_name='Assigned by'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='assigned_technician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to='services.technician', verbose_name='Assigned technician'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_requests', to='core.contact', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='customer_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_requests', to='core.company', verbose_name='Customer company'),
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_requests', to='services.servicetype', verbose_name='Service type'),
        ),
        migrations.AddField(
            model_name='servicerating',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='servicerating',
            name='service_request',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='services.servicerequest', verbose_name='Service request'),
        ),
        migrations.AddField(
            model_name='servicenote',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='servicenote',
            name='service_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='services.servicerequest', verbose_name='Service request'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='service_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='services.servicerequest', verbose_name='Service request'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='technician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='services.technician', verbose_name='Technician'),
        ),
        migrations.AddIndex(
            model_name='technician',
            index=models.Index(fields=['employee_id'], name='services_te_employe_2ed5a7_idx'),
        ),
        migrations.AddIndex(
            model_name='technician',
            index=models.Index(fields=['skill_level'], name='services_te_skill_l_563a66_idx'),
        ),
        migrations.AddIndex(
            model_name='technician',
            index=models.Index(fields=['is_available'], name='services_te_is_avai_d485a2_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['request_number'], name='services_se_request_6a378a_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['customer'], name='services_se_custome_2ad12d_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['status'], name='services_se_status_9254ae_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['priority'], name='services_se_priorit_f2090e_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['assigned_technician'], name='services_se_assigne_a96beb_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['scheduled_date'], name='services_se_schedul_452664_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerating',
            index=models.Index(fields=['service_request'], name='services_se_service_305afb_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerating',
            index=models.Index(fields=['rating'], name='services_se_rating_cd34fb_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerating',
            index=models.Index(fields=['created_at'], name='services_se_created_e9c0c5_idx'),
        ),
        migrations.AddIndex(
            model_name='servicenote',
            index=models.Index(fields=['service_request'], name='services_se_service_96dc16_idx'),
        ),
        migrations.AddIndex(
            model_name='servicenote',
            index=models.Index(fields=['is_internal'], name='services_se_is_inte_993b72_idx'),
        ),
        migrations.AddIndex(
            model_name='servicenote',
            index=models.Index(fields=['created_at'], name='services_se_created_a6389c_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['technician'], name='services_sc_technic_fb4ee7_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['service_request'], name='services_sc_service_abff74_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['start_time'], name='services_sc_start_t_babafe_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['is_confirmed'], name='services_sc_is_conf_514873_idx'),
        ),
    ]
