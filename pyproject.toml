[project]
name = "farjad"
version = "0.1.0"
description = "Industrial ERP System Backend"
authors = [
    {name = "Farjad Team", email = "team@farjad.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "django>=4.2.0,<5.0",
    "djangorestframework>=3.14.0",
    "django-cors-headers>=4.3.0",
    "django-allauth>=0.57.0",
    "djangorestframework-simplejwt>=5.3.0",
    "django-guardian>=2.4.0",
    "django-filter>=23.3",
    "drf-spectacular>=0.26.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    "structlog>=23.2.0",
    "django-structlog>=4.0.0",
    "gunicorn>=21.2.0",
    "whitenoise>=6.6.0",
    "python-decouple>=3.8",
    "django-extensions>=3.2.0",
    "pillow>=10.0.0",
    "django-redis>=5.4.0",
    "pytest>=7.4.0",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=20.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pre-commit>=3.4.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "django-stubs>=4.2.0",
    "djangorestframework-stubs>=3.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["farjad"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "A", # flake8-builtins
    "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "DJ", # flake8-django
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "S101", # use of assert detected
    "PLR0913", # too many arguments to function call
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "COM812", # missing trailing comma
    "ISC001", # implicitly concatenated string literals
    "Q000", # single quotes found but double quotes preferred
    "Q001", # single quote multiline found but double quotes preferred
    "Q002", # single quote docstring found but double quotes preferred
    "Q003", # change outer quotes to avoid escaping inner quotes
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"migrations/*" = ["ALL"]

[tool.ruff.isort]
known-first-party = ["farjad"]
force-sort-within-sections = true

[tool.ruff.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "farjad.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--cov=farjad --cov-report=html --cov-report=term-missing --cov-fail-under=80"

[tool.coverage.run]
source = "farjad"
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/settings/*",
    "*/manage.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
